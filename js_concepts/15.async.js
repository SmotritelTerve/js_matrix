// JS работает в одном потоке, что значит что ни о какой асинхронности нельзя говорить
// но JS все таки позволяет ассинхронные действия (timeouts, запросы на сервер, события)
// благодаря концепции event loop и тому как организован call stack в JS

const first = () => console.log('First');
const second = () => console.log('Second');
const third = () => console.log('Third');

first();
second();
third();

////////

first(); // выполняется сразу колл стеком и выкидывается из него
setTimeout(second, 0);  // setTimeout - стороннее API
// second() после обработки сторонним API положена в очередь колл стеков (call back queue),
// event loop бегает по этой очереди и когда колл стек становится пустым передает очередную функцию в колл стэк для выполнения
third(); // выполняется сразу колл стекоми выкидывается из него

// => 
// First
// Third
// Second